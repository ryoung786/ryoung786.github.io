{"version":3,"sources":["js/conversions.js","js/index.js"],"names":["Units","MILE","METER","KM","YARD","CONVERSIONS","toHMS","totalSeconds","seconds","h","Math","floor","hours","minutes","round","toTotalSeconds","parseFloat","displayHMS","HOUR","slice","MIN","SEC","Distance","constructor","distance","unit","display","displayAsString","fromEvent","event","dist","toUnit","toMiles","toMeters","toKM","toYards","calculatePace","time","units","d","Pace","fromTotalSeconds","toSeconds","calculateTime","pace","Time","hms","ceil","p","arr","push","startsWith","join","toLowerCase","calculateDistance","EVENTS","mile","half","marathon","model","selected_tab","scrollingTo","u","scrolling","handleScroll","main","document","getElementsByTagName","scrollLeft","selection","offsetWidth","render","handleHeaderClick","metric","window","innerWidth","scrollTo","querySelectorAll","forEach","e","classList","remove","querySelector","add","renderInputFields","paceDisplay","timeDisplay","value","textContent","addEventListener","requestAnimationFrame","headerDiv","target","closest","dataset","preventDefault","sectionID","id","form","match","matches","select"],"mappings":"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","file":"js.34e512ae.js","sourceRoot":"..","sourcesContent":["export const Units = {\n  MILE: \"MILE\",\n  METER: \"METER\",\n  KM: \"KM\",\n  YARD: \"YARD\"\n};\nconst CONVERSIONS = {\n  MILE: {\n    METER: 1609.34,\n    KM: 1.60934,\n    MILE: 1,\n    YARD: 1760\n  },\n  METER: {\n    METER: 1,\n    KM: 0.001,\n    MILE: 0.000621371,\n    YARD: 1.09361\n  },\n  KM: {\n    METER: 1000,\n    KM: 1,\n    MILE: 0.621371,\n    YARD: 1093.61\n  },\n  YARD: {\n    METER: 0.9144,\n    KM: 0.0009144,\n    MILE: 0.000568182,\n    YARD: 1\n  }\n};\n\nfunction toHMS(totalSeconds) {\n  let seconds = totalSeconds;\n  const h = Math.floor(seconds / (60 * 60));\n  seconds = seconds % (60 * 60);\n  const m = Math.floor(seconds / 60);\n  const s = Math.round(seconds % 60);\n  return { hours: h, minutes: m, seconds: s };\n}\nfunction toTotalSeconds(hours, minutes, seconds) {\n  return 60 * 60 * hours + 60 * minutes + (parseFloat(seconds) || 0);\n}\nfunction displayHMS(hours, minutes, seconds) {\n  hours = parseFloat(hours) || 0;\n  minutes = parseFloat(minutes) || 0;\n  seconds = parseFloat(seconds) || 0;\n  return {\n    HOUR: hours === 0 ? \"\" : (\"00\" + hours).slice(-2),\n    MIN: hours === 0 && minutes === 0 ? \"\" : (\"00\" + minutes).slice(-2),\n    SEC:\n      hours === 0 && minutes === 0 && seconds === 0\n        ? \"\"\n        : (\"00\" + seconds).slice(-2)\n  };\n}\n\nexport class Distance {\n  constructor(distance, unit) {\n    this.distance = distance;\n    this.unit = unit;\n  }\n  display() {\n    return new Distance(Math.round(100 * this.distance) / 100, this.unit);\n  }\n  displayAsString() {\n    const d = Math.round(100 * this.distance) / 100;\n    const u = { METER: \"m\", MILE: \"miles\", KM: \"km\", YARD: \"yards\" }[this.unit];\n    return `${d} ${u}`;\n  }\n  static fromEvent(event) {\n    return new Distance(event.dist, event.unit);\n  }\n  toUnit(unit) {\n    if (unit === Units.MILE) {\n      return this.toMiles();\n    } else if (unit === Units.METER) {\n      return this.toMeters();\n    } else if (unit === Units.KM) {\n      return this.toKM();\n    } else if (unit === Units.YARD) {\n      return this.toYards();\n    }\n  }\n  toMiles() {\n    return new Distance(\n      this.distance * CONVERSIONS[this.unit][Units.MILE],\n      Units.MILE\n    );\n  }\n  toMeters() {\n    return new Distance(\n      this.distance * CONVERSIONS[this.unit][Units.METER],\n      Units.METER\n    );\n  }\n  toKM() {\n    return new Distance(\n      this.distance * CONVERSIONS[this.unit][Units.KM],\n      Units.KM\n    );\n  }\n  toYards() {\n    return new Distance(\n      this.distance * CONVERSIONS[this.unit][Units.YARD],\n      Units.YARD\n    );\n  }\n  calculatePace(time, units) {\n    let d = this.toUnit(units);\n    return Pace.fromTotalSeconds(time.toSeconds() / d.distance, units);\n  }\n  calculateTime(pace) {\n    let d = this.toUnit(pace.unit);\n    return Time.fromTotalSeconds(d.distance * pace.toSeconds());\n  }\n}\n\nexport class Pace {\n  constructor(hours, minutes, seconds, unit) {\n    this.hours = hours;\n    this.minutes = minutes;\n    this.seconds = seconds;\n    this.unit = unit;\n  }\n  static fromTotalSeconds(seconds, unit) {\n    const hms = toHMS(Math.ceil(seconds));\n    return new Pace(hms.hours, hms.minutes, hms.seconds, unit);\n  }\n  toSeconds() {\n    return toTotalSeconds(this.hours, this.minutes, this.seconds);\n  }\n  display() {\n    return displayHMS(this.hours, this.minutes, this.seconds);\n  }\n  displayAsString() {\n    const p = this.display();\n    let arr = [];\n    if (p.HOUR) arr.push(p.HOUR);\n    if (p.MIN) arr.push(p.MIN);\n    else arr.push(\"0\");\n    arr.push(p.SEC);\n    if (arr[0].startsWith(\"0\")) arr[0] = arr[0].slice(1);\n    return `${arr.join(\":\")}/${this.unit.toLowerCase()}`;\n  }\n  calculateTime(distance) {\n    let d = distance.toUnit(this.unit);\n    return Time.fromTotalSeconds(this.toSeconds() * d.distance);\n  }\n  calculateDistance(time, units) {\n    let d = new Distance(time.toSeconds() / this.toSeconds(), this.unit);\n    return d.toUnit(units).display();\n  }\n}\n\nexport class Time {\n  constructor(hours, minutes, seconds) {\n    this.hours = hours;\n    this.minutes = minutes;\n    this.seconds = seconds;\n  }\n  static fromTotalSeconds(seconds) {\n    const hms = toHMS(Math.round(seconds));\n    return new Time(hms.hours, hms.minutes, hms.seconds);\n  }\n  toSeconds() {\n    return toTotalSeconds(this.hours, this.minutes, this.seconds);\n  }\n  display() {\n    return displayHMS(this.hours, this.minutes, this.seconds);\n  }\n  displayAsString() {\n    const p = this.display();\n    let arr = [];\n    if (p.HOUR) arr.push(p.HOUR);\n    if (p.MIN) arr.push(p.MIN);\n    else arr.push(\"0\");\n    arr.push(p.SEC);\n    if (arr[0].startsWith(\"0\")) arr[0] = arr[0].slice(1);\n    return arr.join(\":\");\n  }\n  calculateDistance(pace, units) {\n    let d = new Distance(this.toSeconds() / pace.toSeconds(), pace.unit);\n    return d.toUnit(units).display();\n  }\n  calculatePace(distance, units) {\n    let d = distance.toUnit(units);\n    return Pace.fromTotalSeconds(this.toSeconds() / d.distance, units);\n  }\n}\n","import { Time, Distance, Pace, Units as u } from \"./conversions\";\n\nconst EVENTS = {\n  \"400m\": { dist: 400, unit: \"METER\" },\n  mile: { dist: 1, unit: \"MILE\" },\n  \"5k\": { dist: 5, unit: \"KM\" },\n  \"10k\": { dist: 10, unit: \"KM\" },\n  half: { dist: 13.1, unit: \"MILE\" },\n  marathon: { dist: 26.2, unit: \"MILE\" }\n};\n\nlet model = {\n  selected_tab: \"distance\",\n  scrollingTo: null,\n  distance: Distance.fromEvent(EVENTS.marathon),\n  time: new Time(3, 0, 0),\n  pace: Distance.fromEvent(EVENTS.marathon).calculatePace(\n    new Time(3, 0, 0),\n    u.MILE\n  )\n};\nlet scrolling = false;\n\n// #region scrolling\nfunction handleScroll() {\n  const main = document.getElementsByTagName(\"main\")[0];\n\n  if (main.scrollLeft === model.scrollingTo) {\n    // have we reached the destination?  if so, clear our scrollingTo\n    model.scrollingTo = null;\n    return;\n  } else if (null !== model.scrollingTo) return;\n\n  let selection = \"time\";\n  if (main.scrollLeft < main.offsetWidth / 2) {\n    selection = \"distance\";\n  } else if (main.scrollLeft < main.offsetWidth * 1.5) {\n    selection = \"pace\";\n  }\n\n  if (selection !== model.selected_tab) {\n    model.selected_tab = selection;\n    render();\n  }\n}\ndocument.getElementsByTagName(\"main\")[0].addEventListener(\"scroll\", e => {\n  if (!scrolling) {\n    window.requestAnimationFrame(function() {\n      handleScroll();\n      scrolling = false;\n    });\n\n    scrolling = true;\n  }\n});\n\ndocument.querySelector(\"header\").addEventListener(\"click\", function(e) {\n  const headerDiv = e.target.closest(\"header > div\");\n  if (headerDiv) {\n    handleHeaderClick(headerDiv.dataset.metric);\n  }\n});\nfunction handleHeaderClick(metric) {\n  model.selected_tab = metric;\n  if (\"distance\" === metric.toLowerCase()) {\n    model.scrollingTo = 0;\n  } else if (\"pace\" === metric.toLowerCase()) {\n    model.scrollingTo = window.innerWidth;\n  } else if (\"time\" === metric.toLowerCase()) {\n    model.scrollingTo = window.innerWidth * 2;\n  }\n  render();\n  document.getElementsByTagName(\"main\")[0].scrollTo(model.scrollingTo, 0);\n}\n// #endregion scrolling\n\ndocument.addEventListener(\"submit\", e => {\n  e.preventDefault();\n  const sectionID = e.target.closest(\"section\").id;\n  const form = e.target.closest(\"form\");\n  if (sectionID.match(/distance|pace/)) {\n    model.time = new Time(\n      form.querySelector(\".time .hours\").value,\n      form.querySelector(\".time .minutes\").value,\n      form.querySelector(\".time .seconds\").value\n    );\n  }\n  if (sectionID.match(/distance|time/)) {\n    model.pace = new Pace(\n      0,\n      form.querySelector(\".pace .minutes\").value,\n      form.querySelector(\".pace .seconds\").value,\n      form.querySelector(\".pace .units\").value\n    );\n  }\n  if (sectionID.match(/time|pace/)) {\n    model.distance = new Distance(\n      form.querySelector(\".distance .input\").value,\n      form.querySelector(\".distance .units\").value\n    );\n  }\n\n  if (sectionID.startsWith(\"distance\")) {\n    model.distance = model.pace.calculateDistance(model.time, model.pace.unit);\n  } else if (sectionID.startsWith(\"pace\")) {\n    model.pace = model.distance.calculatePace(model.time, model.distance.unit);\n  } else if (sectionID.startsWith(\"time\")) {\n    model.time = model.pace.calculateTime(model.distance);\n  }\n\n  render();\n});\n\ndocument.addEventListener(\"change\", e => {\n  if (e.target.matches(\".computed select\")) {\n    const metric = e.target.dataset.metric;\n    if (\"distance\" === metric) {\n      model.distance = model.pace.calculateDistance(model.time, e.target.value);\n    } else if (\"pace\" === metric) {\n      model.pace = model.distance.calculatePace(model.time, e.target.value);\n    }\n    render();\n  } else if (e.target.matches(\".distance select\")) {\n    model.distance = Distance.fromEvent(EVENTS[e.target.value]);\n    render();\n  }\n});\n\ndocument.addEventListener(\"focusin\", e => {\n  if (e.target.matches(\"input\")) {\n    e.target.select();\n  }\n});\n\nfunction render() {\n  renderSelectedTab();\n  renderInputFields();\n  renderComputed();\n\n  function renderSelectedTab() {\n    document.querySelectorAll(\"header > div\").forEach(e => {\n      e.classList.remove(\"selected\");\n    });\n    document\n      .querySelector(\"header > div.\" + model.selected_tab.toLowerCase())\n      .classList.add(\"selected\");\n  }\n  function renderComputed() {\n    document.querySelector(\n      \"#distance-section .computed span\"\n    ).textContent = model.distance.displayAsString();\n    document.querySelector(\n      \"#pace-section .computed span\"\n    ).textContent = model.pace.displayAsString();\n    document.querySelector(\n      \"#time-section .computed span\"\n    ).textContent = model.time.displayAsString();\n  }\n  function renderInputFields() {\n    const paceDisplay = model.pace.display();\n    const timeDisplay = model.time.display();\n    document.querySelectorAll(\"form .pace input.minutes\").forEach(e => {\n      e.value = paceDisplay.MIN;\n    });\n    document.querySelectorAll(\"form .pace input.seconds\").forEach(e => {\n      e.value = paceDisplay.SEC;\n    });\n    document.querySelectorAll(\"form .pace select.units\").forEach(e => {\n      e.value = model.pace.unit;\n    });\n    document.querySelectorAll(\"form .time input.hours\").forEach(e => {\n      e.value = timeDisplay.HOUR;\n    });\n    document.querySelectorAll(\"form .time input.minutes\").forEach(e => {\n      e.value = timeDisplay.MIN;\n    });\n    document.querySelectorAll(\"form .time input.seconds\").forEach(e => {\n      e.value = timeDisplay.SEC;\n    });\n    document.querySelectorAll(\"form .distance input.input\").forEach(e => {\n      e.value = model.distance.display().distance;\n    });\n    document.querySelectorAll(\"form .distance select.units\").forEach(e => {\n      e.value = model.distance.unit;\n    });\n  }\n}\n\nrender();\n"]}